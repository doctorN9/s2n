diff --git a/crypto/s2n_hmac.c b/crypto/s2n_hmac.c
index 9da1fe3..376bc79 100644
--- a/crypto/s2n_hmac.c
+++ b/crypto/s2n_hmac.c
@@ -199,6 +199,13 @@ int s2n_hmac_update(struct s2n_hmac_state *state, const void *in, uint32_t size)
     return s2n_hash_update(&state->inner, in, size);
 }
 
+int s2n_hash_update_xor_pad(struct s2n_hash_state *state, const void *data, uint32_t size) {
+  return s2n_hash_update(state, data, size);
+};
+int s2n_hash_update_digest_pad(struct s2n_hash_state *state, const void *data, uint32_t size) {
+  return s2n_hash_update(state, data, size);
+};
+
 int s2n_hmac_digest(struct s2n_hmac_state *state, void *out, uint32_t size)
 {
     if (state->alg == S2N_HMAC_SSLv3_SHA1 || state->alg == S2N_HMAC_SSLv3_MD5) {
@@ -207,8 +214,8 @@ int s2n_hmac_digest(struct s2n_hmac_state *state, void *out, uint32_t size)
 
     GUARD(s2n_hash_digest(&state->inner, state->digest_pad, state->digest_size));
     GUARD(s2n_hash_reset(&state->outer));
-    GUARD(s2n_hash_update(&state->outer, state->xor_pad, state->block_size));
-    GUARD(s2n_hash_update(&state->outer, state->digest_pad, state->digest_size));
+    GUARD(s2n_hash_update_xor_pad(&state->outer, state->xor_pad, state->block_size));
+    GUARD(s2n_hash_update_digest_pad(&state->outer, state->digest_pad, state->digest_size));
 
     return s2n_hash_digest(&state->outer, out, size);
 }
