sudo: true
language: c

addons:
    apt:
      sources:
        - ubuntu-toolchain-r-test
      packages:
        - gcc-6
        - g++-6
        - indent
        - cppcheck

osx_image: xcode8

os:
  - osx
  - linux

compiler:
  - gcc
  - clang

env:
  - BUILD_S2N=true TESTS=unit
  - LATEST_CLANG=true TESTS=fuzz
  - TESTS=sawHMAC CONFIG=md5 SAW=true
  - TESTS=sawHMAC CONFIG=none SAW=true
  - TESTS=sawHMAC CONFIG=sha1 SAW=true
  - TESTS=sawHMAC CONFIG=sha224 SAW=true
  - TESTS=sawHMAC CONFIG=sha256 SAW=true
  - TESTS=sawHMAC CONFIG=sha384 SAW=true
  - TESTS=sawHMAC CONFIG=sha512 SAW=true
  - TESTS=sawDRBG SAW=true
  - TESTS=sawHMACFailure SAW=true


matrix:
  exclude:
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=md5 SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=none SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=sha1 SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=sha224 SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=sha256 SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=sha384 SAW=true
  - compiler: gcc
    env: TESTS=sawHMAC CONFIG=sha512 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=md5 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=none SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=sha1 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=sha224 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=sha256 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=sha384 SAW=true
  - os: osx
    env: TESTS=sawHMAC CONFIG=sha512 SAW=true
  - compiler: gcc
    env: LATEST_CLANG=true TESTS=fuzz
  - os: osx
    env: LATEST_CLANG=true TESTS=fuzz
  - os: osx
    env: TESTS=sawDRBG SAW=true
  - compiler: gcc
    env: TESTS=sawDRBG SAW=true
  - os: osx
    env: TESTS=sawHMACFailure SAW=true
  - compiler: gcc
    env: TESTS=sawHMACFailure SAW=true
  #This exception is because the test isn't finished yet, remove to turn on DRBG Saw tests
  - compiler: clang
    env: TESTS=sawDRBG SAW=true

    

before_install:
  # Install GCC 6 if on OSX
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then   .travis/brew_install_gcc6.sh ; fi
  # Set GCC 6 as Default on both Ubuntu and OSX
  - alias gcc=$(which gcc-6)
  # Install latest version of clang, clang++, and llvm-symbolizer and add them to beginning of PATH. Needed for fuzzing.
  - if [[ "$LATEST_CLANG" == "true" ]]; then (.travis/install_clang.sh `pwd`/clang-download `pwd`/clang-latest $TRAVIS_OS_NAME) && export PATH=`pwd`/clang-latest/bin:$PATH ; fi

  # Install SAW with Z3 on Linux only 
  - if [[ "$SAW" == "true" ]]; then .travis/install_saw.sh ; fi
  - export PATH=$PATH:$PWD/saw-0.2-2016-11-02-Ubuntu14.04-64/bin:$PWD/z3

install:
  # Download and Install LibFuzzer
  - if [[ "$TESTS" == "fuzz" ]]; then .travis/install_libFuzzer.sh `pwd`/fuzz_dependencies/libFuzzer-download `pwd`/fuzz_dependencies $TRAVIS_OS_NAME ; fi
  # Download and Install Openssl
  - .travis/install_openssl_1_1_0.sh `pwd`/libcrypto-build `pwd`/libcrypto-root $TRAVIS_OS_NAME > /dev/null
  # Install python linked with our compiled Openssl for integration tests
  - if [[ "$BUILD_S2N" == "true" ]]; then sudo "PATH=$PATH" .travis/install_python.sh `pwd`/libcrypto-root > /dev/null ; fi
  # Download and Install GnuTLS for integration tests
  - if [[ "$TESTS" == "unit" ]]; then mkdir gnutls gnutls-build && .travis/install_gnutls.sh `pwd`/gnutls-build `pwd`/gnutls $TRAVIS_OS_NAME > /dev/null && export PATH=`pwd`/gnutls/bin:$PATH ; fi
  # Install prlimit to set the memlock limit to unlimited for this process
  - if [[ "$BUILD_S2N" == "true" ]]; then (test "$TRAVIS_OS_NAME" = "linux" && sudo "PATH=$PATH" .travis/install_prlimit.sh $PWD/.travis > /dev/null && sudo .travis/prlimit --pid "$$" --memlock=unlimited:unlimited) || true ; fi
  - if [[ "$BUILD_S2N" == "true" ]]; then mkdir -p .travis/checker && .travis/install_scan-build.sh .travis/checker && export PATH=$PATH:.travis/checker/bin ; fi
  - if [[ "$BUILD_S2N" == "true" ]]; then .travis/run_cppcheck.sh ; fi

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TESTS" == "unit" ]]; then make -j 8   ; fi
  # Build and run unit tests with scan-build for osx. scan-build bundle isn't available for linux
  - if [[ "$TRAVIS_OS_NAME" == "osx" && "$TESTS" == "unit" ]]; then   scan-build --status-bugs -o /tmp/scan-build make -j8; STATUS=$?; test $STATUS -ne 0 && cat /tmp/scan-build/*/* ; [ "$STATUS" -eq "0" ] ; fi
  - if [[ "$TESTS" == "unit" ]]; then make integration ; fi
  - if [[ "$TESTS" == "fuzz" ]]; then make clean && make fuzz ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TESTS" == "sawHMAC" ]]; then make -C tests/saw/ tmp/verify_s2n_hmac_$CONFIG.log ; fi
  - if [[ "$TESTS" == "sawDRBG" ]]; then make -C tests/saw tmp/spec/DRBG/DRBG.log ; fi
  - if [[ "$TESTS" == "sawHMACFailure" ]]; then make -C tests/saw failure-tests ; fi